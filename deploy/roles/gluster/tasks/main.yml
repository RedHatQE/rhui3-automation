---
# file: roles/gluster/tasks/main.yml
# deploy & configure gluster server

- name: set hostname
  hostname: name="gluster0{{ item.0 + 1 }}.example.com"
  with_indexed_items: "{{ groups['GLUSTER'] }}"
  when: "'GLUSTER' in groups and item.1 == inventory_hostname"
  tags: gluster

- name: copy common custom rpm
  copy: src={{common_custom_rpm}} dest=/tmp
  when: common_custom_rpm is defined
  register: copy_remote_rpm_result
  tags: gluster

- name: install common custom rpm
  package: name='/tmp/{{common_custom_rpm|basename}}' state=present
  when: common_custom_rpm is defined and copy_remote_rpm_result|success
  tags: gluster

- name: checking glusterfs-server install
  package: name=glusterfs-server state=present
  tags: gluster

- name: checking xfsprogs install
  package: name=xfsprogs state=present
  tags: gluster

- name: checking glusterfs-cli install
  package: name=glusterfs-cli state=present
  tags: gluster

- name: create volume group
  lvg: vg=vg_gluster pvs=/dev/xvdf
  tags: gluster

- name: create logical volume
  lvol: vg=vg_gluster lv=lv_brick1 size=100%VG
  tags: gluster

- name: format the device as xfs
  filesystem: fstype=xfs dev={{gluster_xfs_device|default("/dev/mapper/vg_gluster-lv_brick1")}}
# opts='-f,-i size=512'
  tags: gluster

- name: create volume
  file: path=/export/volume state=directory
  tags: gluster

- name: mount volume
  mount: name=/export/volume src={{gluster_xfs_device|default("/dev/mapper/vg_gluster-lv_brick1")}} state=mounted fstype=xfs
  tags: gluster

- name: random name for gluster volume
  set_fact:
     r: "{{1000|random|string}}"
  run_once: yes
  tags: gluster

- name: display random name for gluster volume
  debug: msg="{{r}}"
  tags: gluster

- name: create volume
  file: path="{{ '/export/volume/brick' + r }}" state=directory
  tags: gluster

- name: start glusterd service
  service: name=glusterd state=started enabled=yes
  tags: gluster

- name: gluster peer probe
  script: gluster_peer_probe.sh {{ groups['GLUSTER'] }}
  run_once: true
  tags: gluster

- name: create a gluster volume
  script: gluster_create_volume.sh "{{r}}" "{{ groups['GLUSTER'] }}"
  run_once: true
  tags: gluster

- name: gluster volume start
  command: gluster volume start "{{ 'rhui_content_' + r }}"
  run_once: true
  tags: gluster
