# file: roles/tests/tasks/main.yml
# deploy & run tests

- name: checking git install
  yum: name=git state=present
  tags: tests

- name: create git repo to clone tests
  file: path=/tmp/rhui3-tests state=directory
  tags: tests

- name: check if remote origin exists
  stat: path=/tmp/rhui3-tests/.git/FETCH_HEAD
  register: remote_origin
  tags: tests

- name: init git repo with remote, fetch all, no checkout
  shell: cd /tmp/rhui3-tests && git init && git remote add -f origin git://github.com/RedHatQE/rhui3-automation.git
  when: remote_origin.stat.exists == False
  tags: tests

- name: git true sparseCheckout
  shell: cd /tmp/rhui3-tests/ && git config core.sparseCheckout true
  tags: tests

- name: define tests repo to checkout
  shell: echo tests/ >> /tmp/rhui3-tests/.git/info/sparse-checkout
  tags: tests

- name: git pull
  shell: cd /tmp/rhui3-tests && git pull origin test_igulina
  tags: tests

- name: yum install the 'Development tools' package group
  yum: name="@Development tools" state=present
  tags: tests

- name: yum install python-devel
  yum: name=python-devel state=present
  tags: tests

- name: install tests
  shell: cd /tmp/rhui3-tests/tests && python setup.py install
  tags: tests

- name: generate ssh keys
  command: ssh-keygen -N "" -f /root/.ssh/id_rsa_master creates=/root/.ssh/id_rsa_master
  notify:
  - restorecon root ssh
  register: generated_ssh_master_keys
  tags: tests

- name: slurp the master pub key
  slurp: src=/root/.ssh/id_rsa_master.pub
  register: slurp_id_rsa_master
  when: generated_ssh_master_keys|success
  tags: tests

- name: set the pub_key as a global fact
  set_fact: id_rsa_master_pub="{{ slurp_id_rsa_master.content|b64decode|trim + ' ' + 'master.example.com' }}"
  when: slurp_id_rsa_master|success
  tags: tests

- name: set authorized keys on all roles except Master itself to allow root connection with the key
  authorized_key: key="{{ hostvars[groups['TESTS'][0]]['id_rsa_master_pub'] }}"
                  user='root'
                  state=present
  delegate_to: "{{ item }}"
  with_items: "{{ groups['CDS']|default([]) + groups['HAPROXY']|default([]) + groups['RHUA']|default([]) + groups['DNS']|default([]) + groups['NFS']|default([]) + groups['GLUSTER']|default([]) }}"
  when: slurp_id_rsa_master|success
  tags: tests

- name: run tests suite
  shell: nosetests -vsw /tmp/rhui3-tests/tests &>>/tmp/rhui3test.log
  tags: run_tests
