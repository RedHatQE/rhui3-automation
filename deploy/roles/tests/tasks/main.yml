# file: roles/tests/tasks/main.yml
# deploy & run tests

- name: set hostname
  hostname: name="test.example.com"
  when: "'TEST' in groups"
  tags: tests

- name: checking git install
  package: name=git state=present
  tags: tests

- name: create git repo to clone tests
  file: path=/tmp/rhui3-tests state=directory
  tags: tests

- name: check if remote origin exists
  stat: path=/tmp/rhui3-tests/.git/FETCH_HEAD
  register: remote_origin
  tags: tests

- name: init git repo with remote, fetch all, no checkout
  shell: cd /tmp/rhui3-tests && git init && git remote add -f origin git://github.com/RedHatQE/rhui3-automation.git
  when: remote_origin.stat.exists == False
  tags: tests

- name: git true sparseCheckout
  shell: cd /tmp/rhui3-tests/ && git config core.sparseCheckout true
  tags: tests

- name: define tests repo to checkout
  shell: echo tests/ >> /tmp/rhui3-tests/.git/info/sparse-checkout
  tags: tests

- name: git pull
  shell: cd /tmp/rhui3-tests && git pull origin master
  tags: tests

- name: install the 'Development tools' package group
  package: name="@Development tools" state=present
  tags: tests

- name: install python-devel
  package: name=python-devel state=present
  tags: tests

- name: install python-setuptools
  package: name=python-setuptools state=present
  tags: tests

- name: install libffi-devel
  package: name=libffi-devel state=present enablerepo=*
  tags: tests

- name: install openssl-devel
  package: name=openssl-devel state=present enablerepo=*
  tags: tests

- name: install bash-completion to simplify test execution
  package: name=bash-completion state=present
  tags: tests

- name: use HTTPS in the pypi URL in setuptools if RHEL 6
  lineinfile:
    path: /usr/lib/python2.6/site-packages/setuptools/command/easy_install.py
    regexp: '^(.*)http://pypi.python.org(.*)$'
    line: '\1https://pypi.python.org\2'
    backrefs: yes
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int == 6
  tags: tests

- name: install the last compatible versions of packages whose updates need Python 2.7+
  shell: easy_install pip==9.0.3 && pip install pycparser==2.18
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int == 6
  tags: tests

- name: install pip
  shell: easy_install pip
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7
  tags: tests

- name: install tests
  shell: cd /tmp/rhui3-tests/tests && pip install .
  tags: tests

- name: generate ssh keys
  command: ssh-keygen -N "" -f /root/.ssh/id_rsa_test creates=/root/.ssh/id_rsa_test
  notify: restorecon root ssh
  register: generated_ssh_test_keys
  tags: tests

- name: slurp the test pub key
  slurp: src=/root/.ssh/id_rsa_test.pub
  register: slurp_id_rsa_test
  when: generated_ssh_test_keys is success
  tags: tests

- name: set the pub_key as a global fact
  set_fact: id_rsa_test_pub="{{ slurp_id_rsa_test.content|b64decode|trim + ' ' + 'test.example.com' }}"
  when: slurp_id_rsa_test is success
  tags: tests

- name: set authorized keys on all roles except TEST itself to allow root connection with the key
  authorized_key: key="{{ hostvars[groups['TEST'][0]]['id_rsa_test_pub'] }}"
                  user='root'
                  state=present
  delegate_to: "{{ item }}"
  with_items: "{{ groups['CDS']|default([]) + groups['HAPROXY']|default([]) + groups['RHUA']|default([]) + groups['DNS']|default([]) + groups['NFS']|default([]) + groups['GLUSTER']|default([]) + groups['CLI']|default([]) + groups['ATOMIC_CLI']|default([]) }}"
  when: slurp_id_rsa_test is success
  tags: tests
  
- name: upload files containing auxiliary files that might be needed for some tests (e.g. entitlement certificate, RPMs for custom repos) 
  copy: src="{{ extra_files }}" dest=/tmp/extra_rhui_files/
  delegate_to: "{{ item }}"
  with_items: "{{ groups['RHUA']|default([]) }}"
  register: upload_extra_files
  when: extra_files is defined
  tags: tests
  
- name: unzip zip files, if there are some to be found among the uploaded files
  shell: 'cd /tmp/extra_rhui_files/ && find . -type f -iname "*\.zip" -exec unzip -o {} \;'
  delegate_to: "{{ item }}"
  with_items: "{{ groups['RHUA']|default([]) }}"
  register: unzip_files
  when: (extra_files is defined) and (upload_extra_files is success)
  tags: tests

- name: unpack tarballs with test repos
  shell: 'cd /tmp/extra_rhui_files/ && for f in *.tar; do tar xf $f; done'
  delegate_to: "{{ item }}"
  with_items: "{{ groups['RHUA']|default([]) }}"
  when: (extra_files is defined) and (unzip_files is success)
  tags: tests

- name: upload Red Hat credentials
  copy: src="{{ rhaccount }}" dest=/tmp/extra_rhui_files/rhaccount.sh
  delegate_to: "{{ item }}"
  with_items: "{{ groups['RHUA']|default([]) }}"
  when: rhaccount is defined
  tags: tests

- name: run tests
  command: "rhuitests {{ tests }} quiet"
  register: testreport
  when: tests is defined
  tags: run_tests

- name: print test report locations
  debug:
    var: testreport.stdout_lines
  when: tests is defined
  tags: run_tests
