#!/usr/bin/python
'''Register RHUI nodes with RHSM.'''

from __future__ import print_function

import argparse
import stitches
from stitches.expect import ExpectFailed
import yaml

from rhui3_tests_lib.helpers import Helpers
from rhui3_tests_lib.subscription import RHSMRHUI
from rhui3_tests_lib.util import Util

RHUA_HOSTNAME = "rhua.example.com"
CDS_HOSTNAMES = Util.get_cds_hostnames()
HA_HOSTNAME = "hap01.example.com"

with open("/etc/rhui3_tests/tested_repos.yaml") as configfile:
    CFG = yaml.load(configfile)
    SUBSCRIPTION = CFG["subscriptions"]["RHUI"]

PRS = argparse.ArgumentParser(description="Register the RHUA, CDSes and HAProxy with RHSM.",
                              formatter_class=argparse.ArgumentDefaultsHelpFormatter)
PRS.add_argument("--force",
                 help="forcibly register already registered systems",
                 action="store_true")
ARGS = PRS.parse_args()

print("Registering the nodes.")
for hostname in [RHUA_HOSTNAME] + CDS_HOSTNAMES + [HA_HOSTNAME]:
    CONNECTION = stitches.Connection(hostname, "root", "/root/.ssh/id_rsa_test")
    # uninstall the AWS repo configuration package (if installed) as it won't be needed anymore
    # (the same repo IDs in RHSM and AWS would confuse the Amazon ID plug-in, which would barf)
    Util.remove_amazon_rhui_conf_rpm(CONNECTION)
    # get credentials in the first iteration (ie. from the RHUA)
    if hostname == RHUA_HOSTNAME:
        USERNAME, PASSWORD = Helpers.get_credentials(CONNECTION)
    if Helpers.is_registered(CONNECTION) and not ARGS.force:
        print("%s is already registered and --force was not used, skipping." % hostname)
        continue
    try:
        RHSMRHUI.register_system(CONNECTION, USERNAME, PASSWORD)
        RHSMRHUI.attach_subscription(CONNECTION, SUBSCRIPTION)
        RHSMRHUI.enable_rhui_repo(CONNECTION, gluster=hostname in CDS_HOSTNAMES)
        print("Registered %s." % hostname)
    except ExpectFailed as err:
        print("An error occurred while registering %s:" % hostname)
        print(err)
